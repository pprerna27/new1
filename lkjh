import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from scipy.stats import chi2_contingency

# Function to calculate Cramér's V
def cramers_v(x, y):
    contingency_table = pd.crosstab(x, y)
    chi2_statistic, _, _, expected = chi2_contingency(contingency_table)
    
    n = contingency_table.sum().sum()
    phi2 = chi2_statistic / n
    r, k = contingency_table.shape
    phi2corr = max(0, phi2 - ((k - 1) * (r - 1)) / (n - 1))
    k_corr = k - (k - 1) * (k - 2) / (n - 1)
    r_corr = r - (r - 1) * (r - 2) / (n - 1)
    
    return np.sqrt(phi2corr / min(k_corr - 1, r_corr - 1))

# Select categorical variables except the target variable
categorical_vars = [col for col in df.columns if col != 'col6']

# Initialize a dictionary to store Cramér's V values for col6
cramers_v_scores = {}

# Compute Cramér's V between each independent variable and target variable (col6)
for var in categorical_vars:
    cramers_v_scores[var] = cramers_v(df[var], df['col6'])

# Convert to DataFrame and sort by relevance
cramers_v_df = pd.DataFrame(cramers_v_scores.items(), columns=['Feature', 'Cramers_V'])
cramers_v_df = cramers_v_df.sort_values(by='Cramers_V', ascending=False)

# Plot the heatmap to visualize feature relevance
plt.figure(figsize=(8, 6))
sns.barplot(x='Cramers_V', y='Feature', data=cramers_v_df, palette="coolwarm")
plt.title("Feature Importance based on Cramér's V")
plt.xlabel("Cramér's V Score")
plt.ylabel("Features")
plt.show()

# Display sorted relevance table
print("\nFeature relevance for predicting col6:")
print(cramers_v_df)
