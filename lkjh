import smtplib
from email.message import EmailMessage
import openpyxl
import os

# ==== CONFIGURATION ====
SMTP_SERVER = "smtp.office365.com"   # For Outlook. Use smtp.gmail.com for Gmail
SMTP_PORT = 587
SENDER_EMAIL = "your_email@example.com"
PASSWORD = "your_app_password"   # For Gmail/Outlook, generate an App Password
WORKBOOK_PATH = "recipients.xlsx"   # Workbook containing To/CC in each sheet
ATTACHMENT_PATH = "report.xlsx"     # File to attach
FIXED_SUBJECT = "Status Update for Category"
FIXED_BODY = """Hello Team,

Please find attached the latest report.

Regards,
Your Name
"""
# =======================


def send_mail(to_list, cc_list, subject, body, attachment):
    msg = EmailMessage()
    msg["From"] = SENDER_EMAIL
    msg["To"] = ", ".join(to_list)
    if cc_list:
        msg["Cc"] = ", ".join(cc_list)
    msg["Subject"] = subject
    msg.set_content(body)

    # Attach file
    if attachment and os.path.exists(attachment):
        with open(attachment, "rb") as f:
            file_data = f.read()
            file_name = os.path.basename(attachment)
        msg.add_attachment(file_data, maintype="application", subtype="octet-stream", filename=file_name)

    # Send email
    with smtplib.SMTP(SMTP_SERVER, SMTP_PORT) as server:
        server.starttls()
        server.login(SENDER_EMAIL, PASSWORD)
        server.send_message(msg)


def main():
    wb = openpyxl.load_workbook(WORKBOOK_PATH)

    for sheet_name in wb.sheetnames:
        sheet = wb[sheet_name]
        
        # Assuming "To" emails in column A, "CC" emails in column B
        to_list = [cell.value for cell in sheet["A"] if cell.value]
        cc_list = [cell.value for cell in sheet["B"] if cell.value]

        subject = f"{FIXED_SUBJECT} - {sheet_name}"
        print(f"Sending mail for sheet: {sheet_name} | To: {to_list} | CC: {cc_list}")
        
        send_mail(to_list, cc_list, subject, FIXED_BODY, ATTACHMENT_PATH)


if __name__ == "__main__":
    main()



import pandas as pd
import win32com.client as win32
import time
import csv
from datetime import datetime

# -----------------------------
# Config
# -----------------------------
excel_file = r"C:\path\to\MailList.xlsx"       # Excel file with multiple sheets
attachment_file = r"C:\path\to\Attachment.xlsx"  # File to attach
subject_base = "Fixed Subject - Category"
body_text = """
Hello,

This is a fixed email body.

Regards,
Your Name
"""
log_file = r"C:\path\to\email_log.csv"

# -----------------------------
# Prepare log CSV
# -----------------------------
with open(log_file, 'w', newline='') as f:
    writer = csv.writer(f)
    writer.writerow(["Timestamp", "Sheet", "To", "CC", "Status", "TimeTaken_seconds"])

# -----------------------------
# Start Outlook
# -----------------------------
outlook = win32.Dispatch('outlook.application')

# -----------------------------
# Get all sheet names dynamically
# -----------------------------
excel_obj = pd.ExcelFile(excel_file)
sheets = excel_obj.sheet_names
print("Sheets found:", sheets)

# -----------------------------
# Loop through each sheet
# -----------------------------
for sheet_name in sheets:
    start_sheet_time = time.time()
    print(f"\nProcessing Sheet '{sheet_name}' ...")

    try:
        start_read_time = time.time()
        df = pd.read_excel(excel_file, sheet_name=sheet_name)
        read_time = time.time() - start_read_time
        print(f"Time to read sheet '{sheet_name}': {read_time:.2f} seconds")
    except Exception as e:
        print(f"Error reading sheet '{sheet_name}': {e}")
        continue

    # Get current month and year
    month_year = datetime.now().strftime("%B %Y")

    # Loop through each row
    for idx, row in df.iterrows():
        start_mail_time = time.time()
        # Split by comma and remove extra spaces
        to_list = ', '.join([email.strip() for email in str(row['To']).split(',')])
        cc_list = ', '.join([email.strip() for email in str(row['CC']).split(',')])
        status = "Success"

        try:
            mail = outlook.CreateItem(0)  # 0 = olMailItem
            mail.To = to_list
            mail.CC = cc_list
            mail.Subject = f"{subject_base} - {sheet_name} - {month_year}"
            mail.Body = body_text
            mail.Attachments.Add(attachment_file)

            mail.Send()
            print(f"Email sent to {to_list} (CC: {cc_list})")
        except Exception as e:
            print(f"Failed to send email to {to_list}: {e}")
            status = f"Failed: {e}"

        time_taken = time.time() - start_mail_time

        # Log to CSV
        with open(log_file, 'a', newline='') as f:
            writer = csv.writer(f)
            writer.writerow([datetime.now(), sheet_name, to_list, cc_list, status, round(time_taken, 2)])

    total_sheet_time = time.time() - start_sheet_time
    print(f"Total time for Sheet '{sheet_name}': {total_sheet_time:.2f} seconds")

print("\nAll emails processed. Log saved to:", log_file)